# based on default config of nginx 1.12.1
# Define the user that will own and run the Nginx server
user nginx;
# Define the number of worker processes; recommended value is the number of
# cores that are being used by your server
# auto will default to number of vcpus/cores
worker_processes auto;

# altering default pid file location to run as non-root
pid /tmp/nginx.pid;

# turn off daemon mode to be watched by supervisord
daemon off;

# Define the location on the file system of the error log, plus the minimum
# severity to log messages for
# note: in the nginx docker images this is a 777 symlink to stderr
error_log /var/log/nginx/error.log warn;

# events block defines the parameters that affect connection processing.
events {
    # Define the maximum number of simultaneous connections that can be opened by a worker process
    worker_connections  1024;
}


# http block defines the parameters for how NGINX should handle HTTP web traffic
http {
    # This webserver is designed to run behind a reverse proxy, or more specifically
    # a k8s traefik ingress-controller. The following configuration block tells nginx
    # to use the proxy protocol headers as a trusted source for the real client ip.
    # If your app is not running behind a reverse proxy comment this out
    real_ip_header X-Forwarded-For;
    set_real_ip_from  10.0.0.0/8;

    include /etc/nginx/mime.types;
    default_type text/html;

    # Don't tell nginx version to clients.
    server_tokens off;

    # ratelimit configuration. 
    # general api: 10 requests per second, per IP
    # expensive api: 2 requests per second, per IP
    limit_req_zone $binary_remote_addr zone=general_api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=expensive_api:10m rate=1r/s;

    # Specifies the maximum accepted body size of a client request, as
    # indicated by the request header Content-Length. If the stated content
    # length is greater than this size, then the client receives the HTTP
    # error code 413. Set to 0 to disable.
    client_max_body_size 0;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

    # The location of the log of access attempts to NGINX
    # note: in the nginx docker images this is a 777 symlink to stdout
    access_log /var/log/nginx/access.log  main;

    # Additional parameters to optimize the delivery of static content
    sendfile       on;
    tcp_nopush     on;
    tcp_nodelay    on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}
